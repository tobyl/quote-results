{"version":3,"sources":["Header/Nav.js","Header/index.js","Home/BuyNow.js","SingleItem/HelpBtn.js","options.js","context.js","SingleItem/Modify.js","copy.js","SingleItem/Rows.js","SingleItem/index.js","CoveragePicker/index.js","Coverage/index.js","Home/index.js","Online/index.js","Offline/index.js","OptionalBenefits/index.js","covs.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","Header","to","src","process","alt","Dollar","Value","val","Per","kind","BuyNow","buying","setBuying","onClick","HelpBtn","helpVisible","setHelpVisible","options","liability","coverage_comprehensive","coverage_collision","transportation_replacement","damage_non_owned","waiver_depreciation","accident_waiver","AppContext","createContext","Modify","name","value","isCustomized","updateCoverage","useContext","currentValueIndex","indexOf","length","copy","title","help","HelpRow","VehicleRow","vehicles","Object","keys","map","v","key","id","depreciation","accident","year","ValueRow","noCov","numeral","format","WaiverRow","SingleItem","currentPackage","coverages","ref","useRef","useState","dir","setDir","useEffect","current","Number","setTimeout","cls","classNames","CoveragePicker","changePackage","pack","Coverage","setCustomize","setCurrentPackage","setIsCustomized","cancelCustomize","cov","Home","Online","Offline","OptionalBenefits","good","recommended","highest","1","make","model","2","App","loading","setLoading","customize","setCoverages","delta","setDelta","prevState","next","assign","localStorage","setItem","JSON","stringify","state","removeItem","ls","getItem","parse","covs","Provider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3e150300.chunk.js","sourcesContent":["import React from 'react'\n\nimport './style.scss'\n\nconst Nav = () => {\n  return (\n    <div className=\"Nav\">\n      <a href=\"/\">1</a>\n      <a href=\"/\">2</a>\n      <a href=\"/\">3</a>\n      <a href=\"/\" className=\"active\">4</a>\n      <a href=\"/\">5</a>\n    </div>\n  )\n}\n\nexport default Nav","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Nav from './Nav'\n\nimport './style.scss'\n\nconst Header = () => {\n  return (\n    <div className=\"Header\">\n      <div className=\"clearfix\">\n        <Link to=\"/\">\n          <img className=\"inova\" src={process.env.PUBLIC_URL + '/img/inova-logo.png'} alt=\"Inova\" />\n        </Link>\n        <img className=\"costco\" src={process.env.PUBLIC_URL + '/img/costco-logo.png'} alt=\"Costco\" />\n      </div>\n      <Nav />\n    </div>\n  )\n}\n\nexport default Header","import React from 'react'\n\nconst Dollar = () => {\n  return (\n    <div className=\"Dollar\">\n      $\n    </div>\n  )\n}\n\nconst Value = ({ val }) => {\n  return (\n    <div className=\"Value\">\n      {val}\n    </div>\n  )\n}\n\nconst Per = ({ kind }) => {\n  return (\n    <div className=\"Per\">\n      PER<br />\n      {kind}\n    </div>\n  )\n}\n\nconst BuyNow = ({ buying, setBuying }) => {\n\n  return (\n    <div className=\"BuyNow\">\n      <div className=\"Price\">\n        <div className=\"Monthly\">\n          <Dollar /><Value val=\"241\" /><Per kind=\"MONTH\" />\n        </div>\n        <div className=\"Yearly\">\n          <Dollar /><Value val=\"2862\" /><Per kind=\"YEAR\" />\n        </div>\n      </div>\n      <button className={buying ? 'Button BuyBtn Active' : 'Button BuyBtn'} onClick={() => setBuying(true)}>\n        <span>Buy</span>\n        <strong>Now</strong>\n      </button>\n    </div>\n  )\n}\n\nexport default BuyNow","import React from 'react'\n\nconst HelpBtn = ({ helpVisible, setHelpVisible }) => {\n  return (\n    <button className=\"Button\" onClick={() => setHelpVisible(!helpVisible)}>\n      ?\n    </button>\n  )\n}\n\nexport default HelpBtn","const options = {\n  liability: ['1000000', '2000000'],\n  coverage_comprehensive: ['No coverage', '500', '1000'],\n  coverage_collision: ['No coverage', '500', '1000'],\n  transportation_replacement: ['No coverage', '1200'],\n  damage_non_owned: ['No coverage', '50000'],\n  waiver_depreciation: false,\n  accident_waiver: false,\n}\n\nexport default options","import { createContext } from 'react'\n\nexport const AppContext = createContext()\nexport const FormContext = createContext()","import React, { useContext } from 'react'\nimport options from 'options'\nimport { AppContext } from 'context'\n\nconst Modify = ({ name, value, isCustomized }) => {\n\n  const { updateCoverage } = useContext(AppContext)\n\n  const currentValueIndex = () => {\n    if (options[name]) {\n      return options[name].indexOf(value)\n    }\n    return 0\n  }\n\n  const decrease = () => {\n    if (typeof value === 'boolean') {\n      updateCoverage(name, false)\n    } else if (currentValueIndex() > 0) {\n      updateCoverage(name, options[name][currentValueIndex() - 1])\n    }\n  }\n\n  const increase = () => {\n    if (typeof value === 'boolean') {\n      updateCoverage(name, true)\n    } else if (currentValueIndex() + 1 < options[name].length) {\n      updateCoverage(name, options[name][currentValueIndex() + 1])\n    }\n  }\n\n  const decreaseDisabled = () => {\n    if (typeof value === 'boolean') {\n      return !value\n    }\n    return currentValueIndex() < 1\n  }\n\n  const increaseDisabled = () => {\n    if (typeof value === 'boolean') {\n      return value\n    }\n    return currentValueIndex() + 1 >= options[name].length\n  }\n\n  return (\n    <span className={isCustomized ? 'Modify Visible' : 'Modify'}>\n      <button className={decreaseDisabled() ? 'Button Decrease Disabled' : 'Button Decrease'} onClick={decrease}>\n        -\n      </button>\n      <button className={increaseDisabled() ? 'Button Increase Disabled' : 'Button Increase'} onClick={increase}>\n        +\n      </button>\n    </span>\n  )\n}\n\nexport default Modify","import React from 'react'\n\nconst copy = {\n  liability: {\n    title: <span>Liability Limit</span>,\n    help: 'Liability will provide coverage in the event a third party were to bring a judgement against you.',\n  },\n  coverage_comprehensive: {\n    title: <span>Deductible:<br /><i>Comprehensive Coverage</i></span>,\n    help: 'Comprehensive covers you for such things as fire, theft, vandalism, and glass breakage. The deductible is the amount of money that you will pay out of your own pocket before the insurance company responds.',\n  },\n  coverage_collision: {\n    title: <span>Deductible:<br /><i>Collision Coverage</i></span>,\n    help: 'Collision coverage will repair your vehicle if you are involved in an at-fault accident, single vehicle accident, or hit and run. The deductible is the amount of money that you will pay out of your own pocket before the insurance company responds.',\n  },\n  transportation_replacement: {\n    title: <span>Transportation<br />Replacement</span>,\n    help: 'An Owner\\'s policy covering a private passenger automobile may be extended to provide Liability Coverage, Accident Benefits, and Uninsured Automobile, for any person(s) named in this change form, personally driving any \"Other Automobiles.',\n  },\n  damage_non_owned: {\n    title: <span>Damage to<br />Non-owned Autos</span>,\n    help: 'If you happen to rent a vehicle anywhere in Canada or the U.S., you do not need to purchase coverage for that rental vehicle, this policy covers any damage up to your limit.',\n  },\n  waiver_depreciation: {\n    title: <span>Waiver of<br />Depreciation</span>,\n    help: 'In case you ever get into an accident which causes the full loss of your vehicle within the first few months you own it, you will be reimbursed for the purchase price, not the depreciated value of the vehicle.',\n  },\n  accident_waiver: {\n    title: <span>Accident Waiver</span>,\n    help: 'In the event of you being in an accident in which you are at fault, it will protect your driving record and forgive the accident.',\n  },\n}\n\nexport default copy","import React, { useContext } from 'react'\nimport numeral from 'numeral'\nimport HelpBtn from './HelpBtn'\nimport Modify from './Modify'\nimport copy from 'copy'\nimport { AppContext } from 'context'\n\nexport const HelpRow = ({ name, helpVisible }) => {\n  return (\n    <div className={helpVisible ? 'HelpRow Visible' : 'HelpRow'}>\n      <p>\n        {copy[name].help}\n      </p>\n    </div>\n  )\n}\n\nexport const VehicleRow = ({ name, value }) => {\n\n  const { vehicles } = useContext(AppContext)\n\n  const getValue = id => {\n    if (name === 'waiver_depreciation') {\n      return vehicles[id].depreciation\n    }\n    if (name === 'accident_waiver') {\n      return vehicles[id].accident\n    }\n  }\n\n  return (\n    <div className={value ? 'VehicleRow Visible' : 'VehicleRow'}>\n      <ul>\n        {Object.keys(vehicles).map(v =>\n          <li key={v}>\n            {getValue(v) ? <i className=\"Yes\">✔︎</i> : <i className=\"No\">x</i>}\n            {vehicles[v].year}\n          </li>  \n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport const ValueRow = ({ name, value, isCustomized, helpVisible, setHelpVisible }) => {\n\n  const getValue = () => {\n    if (value === 'No coverage') {\n      return <strong>No Coverage</strong>\n    }\n    return <strong><i>$</i>{numeral(value).format('0,0')}</strong>\n  }\n\n  const noCov = value === 'No coverage'\n\n  return (\n    <div className={noCov ? 'Row ValueRow NoCoverage clearfix' : 'Row ValueRow clearfix'}>\n      <div className=\"Left\">\n        <HelpBtn helpVisible={helpVisible} setHelpVisible={setHelpVisible} />\n        <h4>{copy[name].title}</h4>\n      </div>\n      <div className=\"Right\">\n        <strong>{getValue()}</strong>\n        <Modify\n          name={name}\n          value={value}\n          isCustomized={isCustomized}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport const WaiverRow = ({ name, value, isCustomized, helpVisible, setHelpVisible }) => {\n\n  return (\n    <div className={value ? 'Row WaiverRow clearfix' : 'Row WaiverRow NoCoverage clearfix'}>\n      <div className=\"Left\">\n        <HelpBtn helpVisible={helpVisible} setHelpVisible={setHelpVisible} />\n        <h4>{copy[name].title}</h4>\n      </div>\n      <div className=\"Right\">\n        <Modify\n          name={name}\n          value={value}\n          isCustomized={isCustomized}\n        />\n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport { HelpRow, ValueRow, WaiverRow, VehicleRow } from './Rows'\n\nimport './style.scss'\n\nconst SingleItem = ({ name, currentPackage, coverages, isCustomized }) => {\n\n  const ref = useRef()\n\n  const [helpVisible, setHelpVisible] = useState(false)\n  const [dir, setDir] = useState(null)\n\n  const value = coverages[currentPackage][name]\n\n  useEffect(() => {\n    if (ref.current !== value) {\n      if (value === 'No coverage') {\n        setDir('down')\n      } else if (Number(value) < Number(ref.current)) {\n        setDir('down')\n      } else {\n        setDir('up')\n      }\n    }\n    ref.current = value\n    setTimeout(() => {\n      setDir(null)\n    }, 2000)\n  }, [ref, value, name])\n\n  const cls = classNames('SingleItem', {\n    'Increased': dir === 'up',\n    'Decreased': dir === 'down',\n  })\n\n  return (\n    <div className={cls}>\n      {typeof value === 'boolean' ?\n        <WaiverRow\n          name={name}\n          value={value}\n          isCustomized={isCustomized}\n          helpVisible={helpVisible}\n          setHelpVisible={setHelpVisible}\n        /> :\n        <ValueRow\n          name={name}\n          value={value}\n          isCustomized={isCustomized}\n          helpVisible={helpVisible}\n          setHelpVisible={setHelpVisible}\n        />\n      }\n      {typeof value === 'boolean' && (\n        <VehicleRow\n          name={name}\n          value={value}\n        />\n      )}\n      <HelpRow\n        helpVisible={helpVisible}\n        name={name}\n      />\n    </div>\n  )\n}\n\nexport default SingleItem","import React from 'react'\n\nimport './style.scss'\n\nconst CoveragePicker = ({ currentPackage, changePackage }) => {\n\n  const cls = pack => {\n    if (currentPackage === pack) {\n      return ' Active'\n    }\n    return ''\n  }\n\n  return (\n    <div className=\"CoveragePicker clearfix\">\n      <button className={'Button Good' + cls('good')} onClick={() => changePackage('good')}>\n        Base\n        <span>Coverage</span>\n      </button>\n      <button className={'Button Recommended' + cls('recommended')} onClick={() => changePackage('recommended')}>\n        Costco\n        <span>Recommended!</span>\n      </button>\n      <button className={'Button Highest' + cls('highest')} onClick={() => changePackage('highest')}>\n        Highest\n        <span>Coverage</span>\n      </button>\n    </div>\n  )\n}\n\nexport default CoveragePicker","import React, { useContext } from 'react'\n// import { CoverageItem, DepreciationItem, AccidentItem } from 'CoverageItem'\nimport SingleItem from 'SingleItem'\nimport CoveragePicker from 'CoveragePicker'\nimport { AppContext } from 'context'\n\nimport './style.scss'\n\nconst Coverage = ({ buying }) => {\n\n  const { setCustomize, coverages, currentPackage, setCurrentPackage, changePackage, isCustomized, setIsCustomized, cancelCustomize } = useContext(AppContext)\n\n  const handleCustomize = () => {\n    setCustomize(true)\n    setIsCustomized(true)\n  }\n\n  return (\n    <div className={buying ? 'Coverage Buying' : 'Coverage'}>\n      <div className={isCustomized ? 'PickerHolder Hidden' : 'PickerHolder'}>\n        <CoveragePicker\n          currentPackage={currentPackage}\n          setCurrentPackage={setCurrentPackage}\n          changePackage={changePackage}\n        />\n      </div>\n      <div className=\"Customize text-center\">\n        <button className=\"Button Small Pill Light\" onClick={isCustomized ? cancelCustomize : handleCustomize}>\n          {isCustomized ? 'Remove Customization' : 'Customize Coverage'}\n        </button>\n      </div>\n      {Object.keys(coverages[currentPackage]).map(cov =>\n        <SingleItem\n          key={cov}\n          name={cov}\n          currentPackage={currentPackage}\n          coverages={coverages}\n          isCustomized={isCustomized}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Coverage","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport BuyNow from './BuyNow'\nimport Coverage from 'Coverage'\nimport { AppContext } from 'context'\n\nimport './style.scss'\n\nconst Home = () => {\n\n  const { buying, setBuying } = useContext(AppContext)\n\n  return (\n    <div className=\"Home\">\n      <div className=\"HomeWrapper\">\n        <div className={buying ? 'Congrats Buying text-center' : 'Congrats text-center'}>\n          <h1>Congratulations!</h1>\n          <p>Here's your Costco Recommended <br />insurance package</p>\n        </div>\n        <BuyNow buying={buying} setBuying={setBuying} />\n        <div className={buying ? 'Proceed Buying text-center' : 'Proceed text-center'}>\n          <h3>You can:</h3>\n          <Link className=\"Button Continue\" to=\"/proceed-online\">Proceed Online</Link>\n          <span>or</span>\n          <Link className=\"Button Continue\" to=\"/proceed-offline\">Have us Call You</Link>\n          <p>\n            <button onClick={() => setBuying(false)}>Go Back and Modify Coverage</button>\n          </p>\n        </div>\n        <div className={buying ? 'Saved Buying text-center' : 'Saved text-center'}>\n          <p>You saved $34 per month by selecting the <br />home and auto discount.</p>\n        </div>\n      </div>\n      <Coverage buying={buying} />\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\n\nconst Online = () => {\n  return (\n    <div>\n      online!\n    </div>\n  )\n}\n\nexport default Online","import React from 'react'\n\nconst Offline = () => {\n  return (\n    <div>\n      offline!\n    </div>\n  )\n}\n\nexport default Offline","import React from 'react'\n\nconst OptionalBenefits = () => {\n  return (\n    <div>\n      OptionalBenefits!\n    </div>\n  )\n}\n\nexport default OptionalBenefits","const good = {\n  liability: '1000000',\n  coverage_comprehensive: '1000',\n  coverage_collision: '1000',\n  transportation_replacement: '1200',\n  damage_non_owned: '50000',\n  waiver_depreciation: false,\n  accident_waiver: false,\n}\n\nconst recommended = {\n  liability: '2000000',\n  coverage_comprehensive: '1000',\n  coverage_collision: '1000',\n  transportation_replacement: '1200',\n  damage_non_owned: '50000',\n  waiver_depreciation: true,\n  accident_waiver: true,\n}\n\nconst highest = {\n  liability: '2000000',\n  coverage_comprehensive: '500',\n  coverage_collision: '500',\n  transportation_replacement: '1200',\n  damage_non_owned: '50000',\n  waiver_depreciation: true,\n  accident_waiver: true,\n}\n\nexport default {\n  good,\n  recommended,\n  highest,\n}","import React, { useEffect, useState } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Header from 'Header'\nimport Home from 'Home'\nimport Online from 'Online'\nimport Offline from 'Offline'\nimport OptionalBenefits from 'OptionalBenefits'\nimport { AppContext } from 'context'\nimport covs from 'covs'\n\nconst vehicles = {\n  1: {\n    year: '2007',\n    make: 'Honda',\n    model: 'Fit LX',\n    depreciation: false,\n    accident: true,\n  },\n  2: {\n    year: '2020',\n    make: 'Ford',\n    model: 'Edge',\n    depreciation: true,\n    accident: true,\n  },\n}\n\nconst App = () => {\n\n  const [loading, setLoading] = useState(true)\n  const [customize, setCustomize] = useState(false)\n  const [isCustomized, setIsCustomized] = useState(false)\n  const [coverages, setCoverages] = useState(null)\n  const [currentPackage, setCurrentPackage] = useState('recommended')\n  const [delta, setDelta] = useState(null)\n  const [buying, setBuying] = useState(false)\n\n  const updateCoverage = (name, value) => {\n    setCoverages(prevState => {\n      let next = Object.assign({}, prevState)\n      next[currentPackage][name] = value\n      localStorage.setItem('coverages', JSON.stringify(next))\n      return next\n    })\n  }\n\n  const changePackage = pack => {\n    if (pack !== currentPackage) {\n      setCurrentPackage(prevState => {\n        if (prevState === 'good') {\n          setDelta('up')\n        } else if (prevState === 'highest') {\n          setDelta('down')\n        } else if (prevState === 'recommended') {\n          if (pack === 'good') {\n            setDelta('down')\n          } else {\n            setDelta('up')\n          }\n        }\n        return pack\n      })\n    }\n  }\n\n  const cancelCustomize = () => {\n    localStorage.removeItem('coverages')\n    setCustomize(false)\n    setIsCustomized(false)\n    if (currentPackage === 'good') {\n      updateCoverage('waiver_depreciation', false)\n      updateCoverage('accident_waiver', false)\n    } else {\n      updateCoverage('waiver_depreciation', true)\n      updateCoverage('accident_waiver', true)\n    }\n  }\n\n  const state = {\n    vehicles,\n    loading, setLoading,\n    buying, setBuying,\n    currentPackage, setCurrentPackage,\n    changePackage,\n    coverages, updateCoverage,\n    customize, setCustomize,\n    isCustomized, setIsCustomized,\n    cancelCustomize,\n    delta, setDelta,\n  }\n\n  useEffect(() => {\n    const ls = localStorage.getItem('coverages')\n    if (ls) {\n      setCoverages(JSON.parse(ls))\n      setIsCustomized(true)\n    } else {\n      setCoverages(covs)\n    }\n    setLoading(false)\n  }, [])\n\n  return (\n    <div className=\"App container\">\n      <AppContext.Provider value={state}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            {loading ?\n              <div>Loading...</div> :\n              <Home />\n            }\n          </Route>\n          <Route path=\"/proceed-online\">\n            <Online />\n          </Route>\n          <Route path=\"/proceed-offline\">\n            <Offline />\n          </Route>\n          <Route path=\"/optional-benefits\">\n            <OptionalBenefits />\n          </Route>\n          <Route path=\"/complete\">\n            you've made a great choice\n          </Route>\n        </Switch>\n      </AppContext.Provider>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}